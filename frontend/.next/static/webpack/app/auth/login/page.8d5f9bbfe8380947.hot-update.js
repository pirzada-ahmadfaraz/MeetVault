"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/login/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authAPI: () => (/* binding */ authAPI),\n/* harmony export */   chatAPI: () => (/* binding */ chatAPI),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   healthAPI: () => (/* binding */ healthAPI),\n/* harmony export */   meetingAPI: () => (/* binding */ meetingAPI)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\nconst API_BASE_URL = \"http://localhost:3000/api\" || 0;\n// Create axios instance\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n// Request interceptor to add auth token\napi.interceptors.request.use((config)=>{\n    if (true) {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n            config.headers.Authorization = \"Bearer \".concat(token);\n        }\n    }\n    return config;\n});\n// Response interceptor to handle auth errors\napi.interceptors.response.use((response)=>response, (error)=>{\n    var _error_response;\n    if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401) {\n        // Token expired or invalid\n        if (true) {\n            localStorage.removeItem('authToken');\n            localStorage.removeItem('refreshToken');\n            window.location.href = '/auth/login';\n        }\n    }\n    return Promise.reject(error);\n});\n// Auth API\nconst authAPI = {\n    register: async (credentials)=>{\n        const response = await api.post('/auth/register', credentials);\n        return response.data;\n    },\n    login: async (credentials)=>{\n        const response = await api.post('/auth/login', credentials);\n        return response.data;\n    },\n    refreshToken: async (refreshToken)=>{\n        const response = await api.post('/auth/refresh-token', {\n            refreshToken\n        });\n        return response.data;\n    },\n    getProfile: async ()=>{\n        const response = await api.get('/auth/profile');\n        return response.data;\n    },\n    updateProfile: async (data)=>{\n        const response = await api.put('/auth/profile', data);\n        return response.data;\n    },\n    changePassword: async (currentPassword, newPassword)=>{\n        const response = await api.put('/auth/change-password', {\n            currentPassword,\n            newPassword\n        });\n        return response.data;\n    },\n    logout: async ()=>{\n        const response = await api.post('/auth/logout');\n        return response.data;\n    }\n};\n// Meeting API\nconst meetingAPI = {\n    createMeeting: async (data)=>{\n        const response = await api.post('/meetings', data);\n        return response.data;\n    },\n    getMeeting: async (meetingId)=>{\n        const response = await api.get(\"/meetings/\".concat(meetingId));\n        return response.data;\n    },\n    joinMeeting: async (meetingId, data)=>{\n        const response = await api.post(\"/meetings/\".concat(meetingId, \"/join\"), data || {});\n        return response.data;\n    },\n    leaveMeeting: async (meetingId)=>{\n        const response = await api.post(\"/meetings/\".concat(meetingId, \"/leave\"));\n        return response.data;\n    },\n    startMeeting: async (meetingId)=>{\n        const response = await api.post(\"/meetings/\".concat(meetingId, \"/start\"));\n        return response.data;\n    },\n    endMeeting: async (meetingId)=>{\n        const response = await api.post(\"/meetings/\".concat(meetingId, \"/end\"));\n        return response.data;\n    },\n    getUserMeetings: async function() {\n        let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10, status = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 'all';\n        const response = await api.get('/meetings/my-meetings', {\n            params: {\n                page,\n                limit,\n                status\n            }\n        });\n        return response.data;\n    },\n    getActiveMeetings: async ()=>{\n        const response = await api.get('/meetings/active');\n        return response.data;\n    },\n    updateMeetingSettings: async (meetingId, settings)=>{\n        const response = await api.put(\"/meetings/\".concat(meetingId, \"/settings\"), settings);\n        return response.data;\n    }\n};\n// Chat API\nconst chatAPI = {\n    sendMessage: async (meetingId, data)=>{\n        const response = await api.post(\"/chat/meetings/\".concat(meetingId, \"/messages\"), data);\n        return response.data;\n    },\n    getMessages: async function(meetingId) {\n        let page = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, limit = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 50;\n        const response = await api.get(\"/chat/meetings/\".concat(meetingId, \"/messages\"), {\n            params: {\n                page,\n                limit\n            }\n        });\n        return response.data;\n    },\n    editMessage: async (messageId, content)=>{\n        const response = await api.put(\"/chat/messages/\".concat(messageId), {\n            content\n        });\n        return response.data;\n    },\n    deleteMessage: async (messageId)=>{\n        const response = await api.delete(\"/chat/messages/\".concat(messageId));\n        return response.data;\n    },\n    addReaction: async (messageId, emoji)=>{\n        const response = await api.post(\"/chat/messages/\".concat(messageId, \"/reactions\"), {\n            emoji\n        });\n        return response.data;\n    },\n    removeReaction: async (messageId, emoji)=>{\n        const response = await api.delete(\"/chat/messages/\".concat(messageId, \"/reactions\"), {\n            data: {\n                emoji\n            }\n        });\n        return response.data;\n    },\n    markAsRead: async (messageId)=>{\n        const response = await api.post(\"/chat/messages/\".concat(messageId, \"/read\"));\n        return response.data;\n    },\n    getUnreadCount: async (meetingId)=>{\n        const response = await api.get(\"/chat/meetings/\".concat(meetingId, \"/unread-count\"));\n        return response.data;\n    }\n};\n// Health check\nconst healthAPI = {\n    check: async ()=>{\n        const response = await api.get('/health');\n        return response.data;\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/socket.ts":
/*!***********************!*\
  !*** ./lib/socket.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-client */ \"(app-pages-browser)/./node_modules/socket.io-client/build/esm/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nclass SocketService {\n    connect(token) {\n        return new Promise((resolve, reject)=>{\n            var _process_env_NEXT_PUBLIC_API_URL;\n            if (this.socket) {\n                this.disconnect();\n            }\n            const SOCKET_URL = ((_process_env_NEXT_PUBLIC_API_URL = \"http://localhost:3000/api\") === null || _process_env_NEXT_PUBLIC_API_URL === void 0 ? void 0 : _process_env_NEXT_PUBLIC_API_URL.replace('/api', '')) || 'http://localhost:3000';\n            this.socket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_0__.io)(SOCKET_URL, {\n                auth: {\n                    token\n                },\n                transports: [\n                    'websocket',\n                    'polling'\n                ]\n            });\n            this.socket.on('connect', ()=>{\n                var _this_socket;\n                console.log('Socket connected:', (_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.id);\n                this.isConnected = true;\n                resolve();\n            });\n            this.socket.on('connect_error', (error)=>{\n                console.error('Socket connection error:', error);\n                this.isConnected = false;\n                reject(error);\n            });\n            this.socket.on('disconnect', (reason)=>{\n                console.log('Socket disconnected:', reason);\n                this.isConnected = false;\n            });\n            this.socket.on('error', (error)=>{\n                console.error('Socket error:', error);\n            });\n        });\n    }\n    disconnect() {\n        if (this.socket) {\n            this.socket.disconnect();\n            this.socket = null;\n            this.isConnected = false;\n        }\n    }\n    getConnectionStatus() {\n        return this.isConnected;\n    }\n    // Meeting Events\n    joinMeeting(meetingId) {\n        if (this.socket) {\n            this.socket.emit('join-meeting', {\n                meetingId\n            });\n        }\n    }\n    leaveMeeting(meetingId) {\n        if (this.socket) {\n            this.socket.emit('leave-meeting', {\n                meetingId\n            });\n        }\n    }\n    // WebRTC Signaling Events\n    sendOffer(targetUserId, offer) {\n        if (this.socket) {\n            this.socket.emit('offer', {\n                targetUserId,\n                offer\n            });\n        }\n    }\n    sendAnswer(targetUserId, answer) {\n        if (this.socket) {\n            this.socket.emit('answer', {\n                targetUserId,\n                answer\n            });\n        }\n    }\n    sendIceCandidate(targetUserId, candidate) {\n        if (this.socket) {\n            this.socket.emit('ice-candidate', {\n                targetUserId,\n                candidate\n            });\n        }\n    }\n    // Media Control Events\n    toggleVideo(meetingId, isVideoEnabled) {\n        if (this.socket) {\n            this.socket.emit('toggle-video', {\n                meetingId,\n                isVideoEnabled\n            });\n        }\n    }\n    toggleAudio(meetingId, isAudioEnabled) {\n        if (this.socket) {\n            this.socket.emit('toggle-audio', {\n                meetingId,\n                isAudioEnabled\n            });\n        }\n    }\n    startScreenShare(meetingId) {\n        if (this.socket) {\n            this.socket.emit('start-screen-share', {\n                meetingId\n            });\n        }\n    }\n    stopScreenShare(meetingId) {\n        if (this.socket) {\n            this.socket.emit('stop-screen-share', {\n                meetingId\n            });\n        }\n    }\n    // Chat Events\n    sendMessage(meetingId, content, replyTo) {\n        if (this.socket) {\n            this.socket.emit('send-message', {\n                meetingId,\n                content,\n                replyTo\n            });\n        }\n    }\n    startTyping(meetingId) {\n        if (this.socket) {\n            this.socket.emit('typing-start', {\n                meetingId\n            });\n        }\n    }\n    stopTyping(meetingId) {\n        if (this.socket) {\n            this.socket.emit('typing-stop', {\n                meetingId\n            });\n        }\n    }\n    // Event Listeners\n    onMeetingJoined(callback) {\n        if (this.socket) {\n            this.socket.on('meeting-joined', callback);\n        }\n    }\n    onUserJoined(callback) {\n        if (this.socket) {\n            this.socket.on('user-joined', callback);\n        }\n    }\n    onUserLeft(callback) {\n        if (this.socket) {\n            this.socket.on('user-left', callback);\n        }\n    }\n    onUserDisconnected(callback) {\n        if (this.socket) {\n            this.socket.on('user-disconnected', callback);\n        }\n    }\n    // WebRTC Event Listeners\n    onOffer(callback) {\n        if (this.socket) {\n            this.socket.on('offer', callback);\n        }\n    }\n    onAnswer(callback) {\n        if (this.socket) {\n            this.socket.on('answer', callback);\n        }\n    }\n    onIceCandidate(callback) {\n        if (this.socket) {\n            this.socket.on('ice-candidate', callback);\n        }\n    }\n    // Media Control Event Listeners\n    onParticipantVideoToggled(callback) {\n        if (this.socket) {\n            this.socket.on('participant-video-toggled', callback);\n        }\n    }\n    onParticipantAudioToggled(callback) {\n        if (this.socket) {\n            this.socket.on('participant-audio-toggled', callback);\n        }\n    }\n    onParticipantStartedScreenShare(callback) {\n        if (this.socket) {\n            this.socket.on('participant-started-screen-share', callback);\n        }\n    }\n    onParticipantStoppedScreenShare(callback) {\n        if (this.socket) {\n            this.socket.on('participant-stopped-screen-share', callback);\n        }\n    }\n    // Chat Event Listeners\n    onNewMessage(callback) {\n        if (this.socket) {\n            this.socket.on('new-message', callback);\n        }\n    }\n    onUserTypingStart(callback) {\n        if (this.socket) {\n            this.socket.on('user-typing-start', callback);\n        }\n    }\n    onUserTypingStop(callback) {\n        if (this.socket) {\n            this.socket.on('user-typing-stop', callback);\n        }\n    }\n    // Error Event Listener\n    onSocketError(callback) {\n        if (this.socket) {\n            this.socket.on('error', callback);\n        }\n    }\n    // Remove all listeners\n    removeAllListeners() {\n        if (this.socket) {\n            this.socket.removeAllListeners();\n        }\n    }\n    // Remove specific listeners\n    off(event, callback) {\n        if (this.socket) {\n            this.socket.off(event, callback);\n        }\n    }\n    constructor(){\n        this.socket = null;\n        this.isConnected = false;\n    }\n}\n// Create singleton instance\nconst socketService = new SocketService();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (socketService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/socket.ts\n"));

/***/ })

});